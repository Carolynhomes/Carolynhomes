<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>牧天白衣</title><link>https://Carolynhomes.github.io/Carolynhomes</link><description>哎，今天又是美好的一天哟！！！！！</description><copyright>牧天白衣</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://Carolynhomes.github.io/Carolynhomes</link></image><lastBuildDate>Mon, 25 Nov 2024 12:10:54 +0000</lastBuildDate><managingEditor>牧天白衣</managingEditor><ttl>60</ttl><webMaster>牧天白衣</webMaster><item><title>贪心</title><link>https://Carolynhomes.github.io/Carolynhomes/post/tan-xin.html</link><description>## 贪心概念&#13;
&#13;
贪心：把整体问题分解成多个步骤，在每个步骤都选取当前步骤的最优方案，直到所有步骤结束，每个步骤不会影响后续步骤&#13;
&#13;
核心性质：每次采用局部最优，最终结果就全局最优&#13;
&#13;
&gt; 例子&#13;
&gt;&#13;
&gt; 最少硬币支付问题：1元、2元、5元，数量不限，现在需要支付M元，要求硬币数目最少，应该如何支付?&#13;
&gt;&#13;
&gt; 局部最优：要保证硬币尽可能少，所以当前尽可能选择大面值的硬币&#13;
&#13;
- 并不是所有采用局部最优都可以得到全局最优&#13;
&#13;
## 如何判断是否能用贪心&#13;
&#13;
- 最优子结构性质：当**一个问题的最优解包含子问题的最优解**，则称之为具有最优子结构性质&#13;
&#13;
具体问题怎么做：&#13;
&#13;
- 经验性积累各种类型的贪心&#13;
- 举反例&#13;
&#13;
## 经典贪心&#13;
&#13;
- 蓝桥545&#13;
&#13;
```python&#13;
# 只写了一个半成品&#13;
# 10分钟&#13;
```&#13;
&#13;
答案：&#13;
&#13;
```python&#13;
import heapq  # 堆&#13;
&#13;
n = int(input())&#13;
a = list(map(int, input().split()))&#13;
&#13;
heapq.heapify(a)  # # 将无序的list转为最小堆&#13;
ans = 0&#13;
&#13;
while len(a) != 1:&#13;
    x = heapq.heappop(a)  # 弹出并返回最小元素&#13;
    y = heapq.heappop(a)&#13;
    heapq.heappush(a, x + y)  # 向堆中添加元素&#13;
    ans += x + y&#13;
&#13;
print(ans)&#13;
```&#13;
&#13;
- 蓝桥杯532——分箱问题&#13;
&#13;
```python&#13;
# 每组纪念品价格上限&#13;
w = int(input())&#13;
&#13;
# n个纪念品&#13;
n = int(input())&#13;
&#13;
# n个纪念品的价格&#13;
a = []&#13;
for i in range(n):&#13;
    a.append(int(input()))&#13;
&#13;
# 1. 排序&#13;
a.sort()&#13;
# 最小的和最大的下标&#13;
l, r = 0, n - 1&#13;
ans = 0&#13;
&#13;
while True:&#13;
    if l == r:&#13;
        ans += 1&#13;
        break&#13;
&#13;
    if l &gt; r:&#13;
        break&#13;
&#13;
    # 能够配对&#13;
    if a[l] + a[r] &lt;= w:&#13;
        ans += 1&#13;
        l += 1&#13;
        r -= 1&#13;
    else:&#13;
        # 大的单独放&#13;
        ans += 1&#13;
        r -= 1&#13;
&#13;
print(ans)&#13;
```&#13;
&#13;
- 蓝桥杯209&#13;
&#13;
```python&#13;
s = list(input())&#13;
t = list(input())&#13;
n = len(s)&#13;
ans = 0&#13;
&#13;
# 逐一比对，只要能翻就翻&#13;
for i in range(n):&#13;
    if s[i] == t[i]:&#13;
        continue&#13;
&#13;
    if s[i + 1] == '*':&#13;
        s[i + 1] = 'o'&#13;
    else:&#13;
        s[i + 1] = '*'&#13;
    &#13;
    ans += 1&#13;
&#13;
print(ans)&#13;
```&#13;
&#13;
## 数组乘积问题&#13;
&#13;
![image-20241125200912044](http://cdn.jsdelivr.net/gh/Carolynhomes/images@main/img/Python/202411252009383.png)&#13;
&#13;
。</description><guid isPermaLink="true">https://Carolynhomes.github.io/Carolynhomes/post/tan-xin.html</guid><pubDate>Mon, 25 Nov 2024 12:10:25 +0000</pubDate></item><item><title>看剧看剧</title><link>https://Carolynhomes.github.io/Carolynhomes/post/kan-ju-kan-ju.html</link><description>奈飞工厂：https://www.netflixgc.com&#13;
&#13;
七味网：https://www.qwnull.com。</description><guid isPermaLink="true">https://Carolynhomes.github.io/Carolynhomes/post/kan-ju-kan-ju.html</guid><pubDate>Mon, 25 Nov 2024 11:35:48 +0000</pubDate></item><item><title>Gpt通知</title><link>https://Carolynhomes.github.io/Carolynhomes/post/Gpt-tong-zhi.html</link><description># 2024年11月24日20点12分&#13;
如果出现问题，需要回到首页，选择一个其他的房间&#13;
&#13;
&#13;
# 2024年11月23日19点26分&#13;
1. 更新到今天官网更新的UI&#13;
2. 已支持官网原生高级语音模式&#13;
&#13;
# 2024年11月20日11点49分&#13;
界面进行了改版，帐号是之前那个码，密码：1-6&#13;
而且可以自己注册，续费等等，链接贴一下：https://nbai.site/list/#/register?inviter=S85SL3&#13;
&#13;
现在官网的链接是下面图片这样，我现在的套餐还能3个月，之后就可能换成这些套餐了。</description><guid isPermaLink="true">https://Carolynhomes.github.io/Carolynhomes/post/Gpt-tong-zhi.html</guid><pubDate>Sun, 03 Nov 2024 09:37:37 +0000</pubDate></item></channel></rss>